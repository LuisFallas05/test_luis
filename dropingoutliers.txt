properties_df.info()
pd.set_option('display.max_rows', 4)
properties_df.mean()
properties_df.std()
properties_df.quantile(0.025)
properties_df.quantile(0.975)
length = properties_df.size / 7
price_m2_outlier = []
total_area_outlier = []
converted_price_outlier= []
i = 0
while i < length:
    if properties_df['price_m2'].quantile(0.025)<properties_df['price_m2'][i]<properties_df['price_m2'].quantile(0.975):
        price_m2_outlier.append(0)
    else:
            price_m2_outlier.append(1)
    i = i + 1
i = 0
while i < length:
    if properties_df['converted_price'].quantile(0.025)<properties_df['converted_price'][i]<properties_df['converted_price'].quantile(0.975):
        converted_price_outlier.append(0)
    else:
            converted_price_outlier.append(1)
    i = i + 1
i = 0
while i < length:
    if properties_df['total_area'].quantile(0.025)<properties_df['total_area'][i]<properties_df['total_area'].quantile(0.975):
        total_area_outlier.append(0)
    else:
            total_area_outlier.append(1)
    i = i + 1
properties_df['outliers_price_m2'] = price_m2_outlier
properties_df['outliers_converted_price'] = converted_price_outlier
properties_df['outliers_total_area'] = total_area_outlier
properties_df
multidim_outlier = []
i = 0
while i < length:
    if properties_df['outliers_price_m2'][i]==1 and properties_df['outliers_converted_price'][i]==1 and properties_df['outliers_total_area'][i]==1: 
    multidim_outlier.append(1)
    else:
    multidim_outlier.append(0)
    i = i + 1